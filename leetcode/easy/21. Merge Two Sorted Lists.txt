21. Merge Two Sorted Lists
Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.
```
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* head = l1;
		while(1){
			if(l1 <= l2){
				l1 = l1->next;
			}
			else{
				ListNode* temp = l2->next;
				l2->next = l1->next;
				l1->next =l2;
				l1 = l1->next;
				l2 = temp;
			}
			if(l1 == null){
				l1 = l2;
				break;
			}
			if(l2 == null){
				break;
			}
		}
    }
	void inserpoint(ListNode* l1,ListNode* inser){
		inser->next = l1->next;
		l1->next = inser;
	}
};
```
